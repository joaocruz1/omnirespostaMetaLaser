generator client {
  provider      = "prisma-client-js"
  output        = "../src/generate"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("agent")
  status    String   @default("active")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]   @relation("UserChats")
}

// NOVO MODELO: Crie esta entidade para gerenciar os contatos
model Contact {
  id        String   @id @default(cuid())
  name      String?
  number    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  chats     Chat[]   @relation("ContactChats")
}

model Chat {
  id             String    @id @default(cuid())
  status         String    @default("OPEN")
  lastMessage    String?
  lastMessageAt  DateTime?
  unreadMessages Int       @default(0)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  assignedTo     User?     @relation("UserChats", fields: [assignedToId], references: [id])
  assignedToId   String?
  contact        Contact   @relation("ContactChats", fields: [contactId], references: [id])
  contactId      String
  messages       Message[]
}

model Message {
  id          String   @id
  chatId      String
  type        String
  content     String
  fromMe      Boolean
  timestamp   DateTime
  status      String
  mediaUrl    String?
  quotedMsgId String?
  createdAt   DateTime @default(now())
  chat        Chat     @relation(fields: [chatId], references: [id])
}
